<?php
/**
 * Implements hook_boot().
 */
function geoip_redirect_boot() {
  //verify that a URL has been set
  require_once DRUPAL_ROOT . '/' . './includes/common.inc';
  require_once DRUPAL_ROOT . '/' . './includes/path.inc';
  drupal_load('module', 'geoip');
  drupal_bootstrap(DRUPAL_BOOTSTRAP_PATH);
  drupal_load('module', 'filter');
  //if the user isn't trying to login then attempt a redirect script
  if (arg(0) != 'user' && arg(0) != 'login' && arg(0) != 'admin') {
    if (variable_get('geoip_redirect_url', '') != '') {
      global $user;
      /*
       * if user is annonymous and they match our country to test for,
       * bounce them to a new URL. This is critical because otherwise a
       * cached site will cache which ever country hits the site first.
       * This effectively creates a cached version of the site
       * per country code
       */

      //This code will run the first time they hit a page to set the geo variable
      if ($user->uid == 0 && variable_get('geoip_redirect_country', '') == geoip_country_code() && $_GET['geo'] == '') {
        $ary = $_GET;
        $ary['geo'] = geoip_country_code();
        unset($ary['q']);
        // TODO $ary needs to be an array of keys and values instead of a string.
        drupal_goto(drupal_get_path_alias($_GET['q']), array('query' => $ary));
      }
      //if we've redirected, and they are anon and its the country we're looking for
      elseif ($user->uid == 0 && variable_get('geoip_redirect_country', '') == geoip_country_code() && $_GET['geo'] == geoip_country_code()) {
        //write variable as to where to redirect
        drupal_add_js(array('geoip_redirect' => array('url' => variable_get('geoip_redirect_url', ''), 'country_code' => variable_get('geoip_redirect_country', ''))), array('type' => 'setting', 'scope' => JS_DEFAULT));
        //cookie code to store if they want to stay on the site
        drupal_add_js(drupal_get_path('module', 'geoip_redirect') . '/jquery.cookie.js');
        //redirect code to push them to the new URL if they said they want to go there
        drupal_add_js(drupal_get_path('module', 'geoip_redirect') . '/redirect.js');
        //fix for the popups and modalframe projects
        drupal_add_js(drupal_get_path('module', 'geoip_redirect') . '/popupfix.js');
        drupal_add_css(drupal_get_path('module', 'geoip_redirect') . '/redirect.css');
      }
    }
  }
}

/**
 * Implements hook_menu().
 */
function geoip_redirect_menu() {
  $items['admin/config/geoip/redirect'] = array(
    'title' => 'Redirect',
    'description' => 'Setup a global redirect based on the country of origin',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('geoip_redirect_admin_settings'),
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Implements hook_admin_settings().
 */
function geoip_redirect_admin_settings($form, &$form_state) {
  $form['geoip_redirect_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Redirect URL'),
    '#description' => t('The URL to redirect to based on country selection below.  Leaving this blank will effectively disable the module.'),
    '#default_value' => variable_get('geoip_redirect_url', ''),
  );
  $form['geoip_redirect_country'] = array(
    '#type' => 'select',
    '#options' => geoip_country_values(),
    '#title' => t('Country'),
    '#description' => t('Country to redirect from current site to the site specified above.'),
    '#default_value' => variable_get('geoip_redirect_country', ''),
  );

  return system_settings_form($form);
}
